//
// Copyright (C) 2020 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pairing.proto

package adbpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PairingPacket_Type int32

const (
	PairingPacket_SPAKE2_MSG PairingPacket_Type = 0
	PairingPacket_PEER_INFO  PairingPacket_Type = 1
)

// Enum value maps for PairingPacket_Type.
var (
	PairingPacket_Type_name = map[int32]string{
		0: "SPAKE2_MSG",
		1: "PEER_INFO",
	}
	PairingPacket_Type_value = map[string]int32{
		"SPAKE2_MSG": 0,
		"PEER_INFO":  1,
	}
)

func (x PairingPacket_Type) Enum() *PairingPacket_Type {
	p := new(PairingPacket_Type)
	*p = x
	return p
}

func (x PairingPacket_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PairingPacket_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_pairing_proto_enumTypes[0].Descriptor()
}

func (PairingPacket_Type) Type() protoreflect.EnumType {
	return &file_pairing_proto_enumTypes[0]
}

func (x PairingPacket_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PairingPacket_Type.Descriptor instead.
func (PairingPacket_Type) EnumDescriptor() ([]byte, []int) {
	return file_pairing_proto_rawDescGZIP(), []int{0, 0}
}

// The type of packets used in the pairing protocol
type PairingPacket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PairingPacket) Reset() {
	*x = PairingPacket{}
	mi := &file_pairing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PairingPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairingPacket) ProtoMessage() {}

func (x *PairingPacket) ProtoReflect() protoreflect.Message {
	mi := &file_pairing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairingPacket.ProtoReflect.Descriptor instead.
func (*PairingPacket) Descriptor() ([]byte, []int) {
	return file_pairing_proto_rawDescGZIP(), []int{0}
}

var File_pairing_proto protoreflect.FileDescriptor

const file_pairing_proto_rawDesc = "" +
	"\n" +
	"\rpairing.proto\x12\tadb.proto\"6\n" +
	"\rPairingPacket\"%\n" +
	"\x04Type\x12\x0e\n" +
	"\n" +
	"SPAKE2_MSG\x10\x00\x12\r\n" +
	"\tPEER_INFO\x10\x01B-\n" +
	"\x1dcom.android.server.adb.protosB\fPairingProtob\x06proto3"

var (
	file_pairing_proto_rawDescOnce sync.Once
	file_pairing_proto_rawDescData []byte
)

func file_pairing_proto_rawDescGZIP() []byte {
	file_pairing_proto_rawDescOnce.Do(func() {
		file_pairing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pairing_proto_rawDesc), len(file_pairing_proto_rawDesc)))
	})
	return file_pairing_proto_rawDescData
}

var file_pairing_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pairing_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pairing_proto_goTypes = []any{
	(PairingPacket_Type)(0), // 0: adb.proto.PairingPacket.Type
	(*PairingPacket)(nil),   // 1: adb.proto.PairingPacket
}
var file_pairing_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pairing_proto_init() }
func file_pairing_proto_init() {
	if File_pairing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pairing_proto_rawDesc), len(file_pairing_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pairing_proto_goTypes,
		DependencyIndexes: file_pairing_proto_depIdxs,
		EnumInfos:         file_pairing_proto_enumTypes,
		MessageInfos:      file_pairing_proto_msgTypes,
	}.Build()
	File_pairing_proto = out.File
	file_pairing_proto_goTypes = nil
	file_pairing_proto_depIdxs = nil
}
