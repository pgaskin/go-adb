//
// Copyright (C) 2020 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: app_processes.proto

package adbpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessEntry struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Pid                int64                  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Debuggable         bool                   `protobuf:"varint,2,opt,name=debuggable,proto3" json:"debuggable,omitempty"`
	Profileable        bool                   `protobuf:"varint,3,opt,name=profileable,proto3" json:"profileable,omitempty"`
	Architecture       string                 `protobuf:"bytes,4,opt,name=architecture,proto3" json:"architecture,omitempty"` // ISA name, e.g., "arm64"
	UserId             *int64                 `protobuf:"varint,5,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	ProcessName        *string                `protobuf:"bytes,6,opt,name=process_name,json=processName,proto3,oneof" json:"process_name,omitempty"`
	PackageNames       []string               `protobuf:"bytes,7,rep,name=package_names,json=packageNames,proto3" json:"package_names,omitempty"`
	WaitingForDebugger *bool                  `protobuf:"varint,8,opt,name=waiting_for_debugger,json=waitingForDebugger,proto3,oneof" json:"waiting_for_debugger,omitempty"`
	Uid                *int64                 `protobuf:"varint,9,opt,name=uid,proto3,oneof" json:"uid,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProcessEntry) Reset() {
	*x = ProcessEntry{}
	mi := &file_app_processes_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessEntry) ProtoMessage() {}

func (x *ProcessEntry) ProtoReflect() protoreflect.Message {
	mi := &file_app_processes_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessEntry.ProtoReflect.Descriptor instead.
func (*ProcessEntry) Descriptor() ([]byte, []int) {
	return file_app_processes_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessEntry) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ProcessEntry) GetDebuggable() bool {
	if x != nil {
		return x.Debuggable
	}
	return false
}

func (x *ProcessEntry) GetProfileable() bool {
	if x != nil {
		return x.Profileable
	}
	return false
}

func (x *ProcessEntry) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

func (x *ProcessEntry) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ProcessEntry) GetProcessName() string {
	if x != nil && x.ProcessName != nil {
		return *x.ProcessName
	}
	return ""
}

func (x *ProcessEntry) GetPackageNames() []string {
	if x != nil {
		return x.PackageNames
	}
	return nil
}

func (x *ProcessEntry) GetWaitingForDebugger() bool {
	if x != nil && x.WaitingForDebugger != nil {
		return *x.WaitingForDebugger
	}
	return false
}

func (x *ProcessEntry) GetUid() int64 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

type AppProcesses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Process       []*ProcessEntry        `protobuf:"bytes,1,rep,name=process,proto3" json:"process,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppProcesses) Reset() {
	*x = AppProcesses{}
	mi := &file_app_processes_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppProcesses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppProcesses) ProtoMessage() {}

func (x *AppProcesses) ProtoReflect() protoreflect.Message {
	mi := &file_app_processes_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppProcesses.ProtoReflect.Descriptor instead.
func (*AppProcesses) Descriptor() ([]byte, []int) {
	return file_app_processes_proto_rawDescGZIP(), []int{1}
}

func (x *AppProcesses) GetProcess() []*ProcessEntry {
	if x != nil {
		return x.Process
	}
	return nil
}

var File_app_processes_proto protoreflect.FileDescriptor

const file_app_processes_proto_rawDesc = "" +
	"\n" +
	"\x13app_processes.proto\x12\tadb.proto\"\xfd\x02\n" +
	"\fProcessEntry\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\x03R\x03pid\x12\x1e\n" +
	"\n" +
	"debuggable\x18\x02 \x01(\bR\n" +
	"debuggable\x12 \n" +
	"\vprofileable\x18\x03 \x01(\bR\vprofileable\x12\"\n" +
	"\farchitecture\x18\x04 \x01(\tR\farchitecture\x12\x1c\n" +
	"\auser_id\x18\x05 \x01(\x03H\x00R\x06userId\x88\x01\x01\x12&\n" +
	"\fprocess_name\x18\x06 \x01(\tH\x01R\vprocessName\x88\x01\x01\x12#\n" +
	"\rpackage_names\x18\a \x03(\tR\fpackageNames\x125\n" +
	"\x14waiting_for_debugger\x18\b \x01(\bH\x02R\x12waitingForDebugger\x88\x01\x01\x12\x15\n" +
	"\x03uid\x18\t \x01(\x03H\x03R\x03uid\x88\x01\x01B\n" +
	"\n" +
	"\b_user_idB\x0f\n" +
	"\r_process_nameB\x17\n" +
	"\x15_waiting_for_debuggerB\x06\n" +
	"\x04_uid\"A\n" +
	"\fAppProcesses\x121\n" +
	"\aprocess\x18\x01 \x03(\v2\x17.adb.proto.ProcessEntryR\aprocessB2\n" +
	"\x1dcom.android.server.adb.protosB\x11AppProcessesProtob\x06proto3"

var (
	file_app_processes_proto_rawDescOnce sync.Once
	file_app_processes_proto_rawDescData []byte
)

func file_app_processes_proto_rawDescGZIP() []byte {
	file_app_processes_proto_rawDescOnce.Do(func() {
		file_app_processes_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_app_processes_proto_rawDesc), len(file_app_processes_proto_rawDesc)))
	})
	return file_app_processes_proto_rawDescData
}

var file_app_processes_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_app_processes_proto_goTypes = []any{
	(*ProcessEntry)(nil), // 0: adb.proto.ProcessEntry
	(*AppProcesses)(nil), // 1: adb.proto.AppProcesses
}
var file_app_processes_proto_depIdxs = []int32{
	0, // 0: adb.proto.AppProcesses.process:type_name -> adb.proto.ProcessEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_app_processes_proto_init() }
func file_app_processes_proto_init() {
	if File_app_processes_proto != nil {
		return
	}
	file_app_processes_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_app_processes_proto_rawDesc), len(file_app_processes_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_processes_proto_goTypes,
		DependencyIndexes: file_app_processes_proto_depIdxs,
		MessageInfos:      file_app_processes_proto_msgTypes,
	}.Build()
	File_app_processes_proto = out.File
	file_app_processes_proto_goTypes = nil
	file_app_processes_proto_depIdxs = nil
}
